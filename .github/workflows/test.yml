name: Lint and Test
on: push
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==1.8.3

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install the project dependencies
        run: poetry install

      - name: ruff format
        run: poetry run ruff format --check

      - name: ruff check
        run: poetry run ruff check --output-format=github .

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==1.8.3

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install the project dependencies
        run: poetry install

      - name: pytest
        run: |
          poetry run pytest --cov
          mv .coverage .coverage.${{ matrix.python-version }}

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage*
          include-hidden-files: true
          if-no-files-found: ignore

  coverage:
    name: Combine and check coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry==1.8.3

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Install the project dependencies
        run: poetry install

      - name: Combine coverage & fail if under configured percentage
        run: |
          poetry run coverage combine
          poetry run coverage html --skip-covered --skip-empty

          # Report and write to summary.
          poetry run coverage report --fail-under=0 --format=markdown >> $GITHUB_STEP_SUMMARY

          # Report again and fail if under configured percentage.
          poetry run coverage report

      - name: Upload HTML report if check failed.
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
        if: ${{ failure() }}
